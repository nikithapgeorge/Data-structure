#include <stdio.h>
#include <stdlib.h>

// Node structure
struct Node {
    int data;
    struct Node* next;
};

// Function to insert a new node at the beginning of the circular linked list
void insert(struct Node** head, int data) {
    // Create a new node
    struct Node* newNode = (struct Node*)malloc(sizeof(struct Node));
    newNode->data = data;

    // If the list is empty, make the new node as the head
    if (*head == NULL) {
        newNode->next = newNode;
        *head = newNode;
    }
    else {
        // Find the last node
        struct Node* last = *head;
        while (last->next != *head)
            last = last->next;

        // Insert the new node at the beginning
        newNode->next = *head;
        last->next = newNode;
        *head = newNode;
    }
}

// Function to display the circular linked list
void display(struct Node* head) {
    struct Node* temp = head;

    if (head != NULL) {
        do {
            printf("%d ", temp->data);
            temp = temp->next;
        } while (temp != head);
    }

    printf("\n");
}

int main() {
    struct Node* head = NULL;

    // Insert nodes in the singly circular linked list
    insert(&head, 4);
    insert(&head, 3);
    insert(&head, 2);
    insert(&head, 1);

    // Display the singly circular linked list
    printf("Singly Circular Linked List: ");
    display(head);

    return 0;
}
